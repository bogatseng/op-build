From c3ee7eca51b71a68753d543c8ad2a229238257ac Mon Sep 17 00:00:00 2001
From: Dean Sanner <dsanner@us.ibm.com>
Date: Wed, 27 Apr 2016 07:19:49 -0500
Subject: [PATCH 1/2] Add BMC inventory to devtree

Change-Id: I0b78d00c190b39b4866a679dfbf929f2cab7ecc1
---
 src/include/usr/pnor/pnorif.H |   1 +
 src/usr/devtree/devtree.C     | 101 ++++++++++++++++++++++++++++++++++++------
 src/usr/devtree/devtree.H     |  11 ++++-
 src/usr/pnor/pnor_common.C    |   1 +
 4 files changed, 100 insertions(+), 14 deletions(-)

diff --git a/src/include/usr/pnor/pnorif.H b/src/include/usr/pnor/pnorif.H
index d60b67e..bcebf53 100644
--- a/src/include/usr/pnor/pnorif.H
+++ b/src/include/usr/pnor/pnorif.H
@@ -59,6 +59,7 @@ enum SectionId
     NVRAM,          /**< Opal NVRAM */
     OCC,            /**< OCC lid */
     FIRDATA,        /**< FIRDATA */
+    BMC_INV,        /**< BMC Inventory */
     ATTR_TMP,       /**< Temporary Attribute Override */
     ATTR_PERM,      /**< Permanent Attribute Override */
     CAPP,           /**< CAPP lid */
diff --git a/src/usr/devtree/devtree.C b/src/usr/devtree/devtree.C
index 6bdeff3..9376db6 100644
--- a/src/usr/devtree/devtree.C
+++ b/src/usr/devtree/devtree.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2013,2015                        */
+/* Contributors Listed Below - COPYRIGHT 2013,2016                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -28,6 +28,7 @@
 #include "devtree.H"
 #include <sys/mm.h>
 #include <limits.h>
+#include <pnor/pnorif.H>
 
 extern trace_desc_t *g_trac_devtree;
 
@@ -49,6 +50,74 @@ uint32_t devTree::getSize()
     return mHeader->totalSize;
 }
 
+bool  devTree::loadBmcInventory()
+{
+    errlHndl_t l_errl = NULL;
+    PNOR::SectionInfo_t l_info;
+    bool l_useBMC = false;
+
+    do
+    {
+        // Get BMC_INV PNOR section info from PNOR RP
+        l_errl = PNOR::getSectionInfo( PNOR::BMC_INV, l_info );
+        if( l_errl )
+        {
+            delete l_errl; //okay not to find it, toss error
+            TRACFCOMP( g_trac_devtree, "No BMC_INV section");
+            break;
+        }
+
+        // Check to see if data is valid -- check magic and length
+        dtHeader_t * l_bmcDt =  reinterpret_cast<dtHeader_t *>(l_info.vaddr);
+
+        if ((l_bmcDt->magicNumber != DT_MAGIC) ||
+            (l_bmcDt->totalSize >= l_info.size))
+        {
+            TRACFCOMP( g_trac_devtree, "Bad BMC magic[%08X] or len[%x] exceeds ",
+                       "partition size[%x]", l_bmcDt->magicNumber,
+                       l_bmcDt->totalSize,l_info.size);
+            break;
+        }
+
+        //Check to see that BMC size is less than Host size
+        if(l_bmcDt->totalSize >= mMaxSize)
+        {
+            TRACFCOMP( g_trac_devtree, "BMC devtree [%x] is larger than host [%x]",
+                       l_bmcDt->totalSize, mMaxSize);
+            break;
+        }
+
+        //All good, copy BMC into Host space
+        //Note that we only copy the string/struct section because Host
+        //has larger reserved mem requirements (and we don't replicate
+        //BMC version up)
+        l_useBMC = true;
+        TRACFCOMP( g_trac_devtree, "Using BMC devtree as starting point");
+
+        //Copy struct, determine strings offset
+        char* src = reinterpret_cast<char*>(l_info.vaddr)+l_bmcDt->offsetStruct;
+        char* dest = mSpace + mHeader->offsetStruct;
+        memcpy(dest, src, l_bmcDt->sizeStruct);
+        mHeader->sizeStruct = l_bmcDt->sizeStruct;
+        mHeader->offsetStrings = mHeader->offsetStruct + mHeader->sizeStruct;
+
+        //Copy strings, adjust totalSize
+        src = reinterpret_cast<char*>(l_info.vaddr) + l_bmcDt->offsetStrings;
+        dest = mSpace + mHeader->offsetStrings;
+        memcpy(dest, src, l_bmcDt->sizeStrings);
+        mHeader->sizeStrings = l_bmcDt->sizeStrings;
+        mHeader->totalSize += mHeader->sizeStruct + mHeader->sizeStrings;
+    } while ( 0 );
+
+    if(!l_useBMC)
+    {
+        TRACFCOMP( g_trac_devtree, "Default to Host only devtree");
+    }
+
+    return  l_useBMC;
+}
+
+
 void devTree::initialize(uint64_t i_addr, size_t i_maxSize, bool i_virtual)
 {
     /* Initialize the device tree header. */
@@ -82,18 +151,24 @@ void devTree::initialize(uint64_t i_addr, size_t i_maxSize, bool i_virtual)
     mHeader->sizeStrings = 0;
     mHeader->sizeStruct = 0;
 
-    /* Create the initial root node. */
-    uint32_t* curWord = getStructSectionAtOffset(0);
-    *curWord++ = DT_BEGIN_NODE;
-    *curWord++ = 0;
-    *curWord++ = DT_END_NODE;
-    *curWord = DT_END;
-
-    /* Adjust offsets and sizes to account for the root node we just added*/
-    uint32_t structSizeAdded = sizeof(uint32_t) * 4;
-    mHeader->offsetStrings += structSizeAdded;
-    mHeader->sizeStruct += structSizeAdded;
-    mHeader->totalSize += structSizeAdded;
+    //Attempt to load the BMC inventory as a starting point for the devTree
+    //If not possible (normal occurance) then populate starting value for
+    //host only
+    if (!loadBmcInventory())
+    {
+        /* Create the initial root node. */
+        uint32_t* curWord = getStructSectionAtOffset(0);
+        *curWord++ = DT_BEGIN_NODE;
+        *curWord++ = 0;
+        *curWord++ = DT_END_NODE;
+        *curWord = DT_END;
+
+        /* Adjust offsets and sizes to account for the root node we just added*/
+        uint32_t structSizeAdded = sizeof(uint32_t) * 4;
+        mHeader->offsetStrings += structSizeAdded;
+        mHeader->sizeStruct += structSizeAdded;
+        mHeader->totalSize += structSizeAdded;
+    }
 
     /* Add the standard root node properties. */
     dtOffset_t rootNode = findNode("/");
diff --git a/src/usr/devtree/devtree.H b/src/usr/devtree/devtree.H
index a655047..58125f7 100644
--- a/src/usr/devtree/devtree.H
+++ b/src/usr/devtree/devtree.H
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2013,2015                        */
+/* Contributors Listed Below - COPYRIGHT 2013,2016                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -211,6 +211,15 @@ typedef size_t dtOffset_t;
         ~devTree();
 
         /**
+         * Load the BMC Inventory from BMC_INV if possible.
+         * If the PNOR contians a PNOR partition of BMC_INV and it has
+         * populated data, then use it as the base device tree
+         * @return bool -- if the BMC devtree was loaded as starting
+         *                 point for the device tree
+         */
+        bool loadBmcInventory();
+
+        /**
          * Get the internal struct section at node offset
          * @param[in] offset    Offset to node
          * @return uin32_t* pointer to struct section
diff --git a/src/usr/pnor/pnor_common.C b/src/usr/pnor/pnor_common.C
index 4808621..d315104 100644
--- a/src/usr/pnor/pnor_common.C
+++ b/src/usr/pnor/pnor_common.C
@@ -64,6 +64,7 @@ const char* cv_EYECATCHER[] = {
     "NVRAM",     /**< PNOR::NVRAM          : OPAL Storage */
     "OCC",       /**< PNOR::OCC            : OCC LID */
     "FIRDATA",   /**< PNOR::FIRDATA        : FIRDATA */
+    "BMC_INV",   /**< PNOR::BMC_INV        : BMC Inventory */
     "ATTR_TMP",  /**< PNOR::ATTR_TMP       : Temporary Attribute Overrides */
     "ATTR_PERM", /**< PNOR::ATTR_PERM      : Permanent Attribute Overrides */
     "CAPP",      /**< PNOR::CAPP           : CAPP LID */
-- 
1.8.2.2

